name: Neuroflow Release (PyPI)

on:
  push:
    tags:
      - "v*"
  workflow_dispatch: {}

# One release per ref at a time
concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

# OIDC for Trusted Publishing; no API token needed
permissions:
  contents: read
  id-token: write

defaults:
  run:
    shell: bash

jobs:
  build-test-publish:
    name: Build, Test, and Publish to PyPI
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: latest
          python-version: "3.12"
          enable-cache: true

      - name: Ensure Python runtime
        run: uv python install 3.12

      - name: Install dependencies (frozen)
        env:
          UV_CACHE_DIR: ${{ runner.temp }}/setup-uv-cache
        run: uv sync --frozen

      - name: Lint (ruff)
        uses: astral-sh/ruff-action@v3
        with:
          version: latest
          args: "check --output-format=github"
          src: "."

      - name: Type check (ty)
        # Keep non-blocking while ty is in preview
        continue-on-error: true
        env:
          UV_CACHE_DIR: ${{ runner.temp }}/setup-uv-cache
        run: |
          uvx ty --version || true
          uvx ty check .

      - name: Test with coverage
        env:
          UV_CACHE_DIR: ${{ runner.temp }}/setup-uv-cache
        run: |
          uv run --frozen pytest \
            --junitxml=junit.xml \
            --cov=neuroflow \
            --cov-report=xml:coverage.xml

      - name: Build distributions (sdist + wheel)
        env:
          UV_CACHE_DIR: ${{ runner.temp }}/setup-uv-cache
        run: |
          uv run -- python -m pip install --upgrade build
          uv run -- python -m build --sdist --wheel
          ls -la dist

      - name: Upload build & test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts-${{ github.ref_name }}
          path: |
            dist/**
            junit.xml
            coverage.xml
          if-no-files-found: ignore
          retention-days: 14

      - name: Publish to PyPI (Trusted Publishing)
        # Requires PyPI project configured for trusted publishing for this repo
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          print-hash: true
          attestations: true
